from math import log

def createDataSet():
    #数据集
    dataSet = [[1, '青绿', '蜷缩', '浊响', '清晰', '凹陷', '硬滑', '是'],
           [2, '乌黑', '蜷缩', '沉闷', '清晰', '凹陷', '硬滑', '是'],
           [3, '乌黑', '蜷缩', '浊响', '清晰', '凹陷', '硬滑', '是'],
           [4, '青绿', '蜷缩', '沉闷', '清晰', '凹陷', '硬滑', '是'],
           [5, '浅白', '蜷缩', '浊响', '清晰', '凹陷', '硬滑', '是'],
           [6, '青绿', '稍蜷', '浊响', '清晰', '稍凹', '软粘', '是'],
           [7, '乌黑', '稍蜷', '浊响', '稍糊', '稍凹', '软粘', '是'],
           [8, '乌黑', '稍蜷', '浊响', '清晰', '稍凹', '硬滑', '是'],
           [9, '乌黑', '稍蜷', '沉闷', '稍糊', '稍凹', '硬滑', '否'],
           [10, '青绿', '硬挺', '清脆', '清晰', '平坦', '软粘', '否'],
           [11, '浅白', '硬挺', '清脆', '模糊', '平坦', '硬滑', '否'],
           [12, '浅白', '蜷缩', '浊响', '模糊', '平坦', '软粘', '否'],
           [13, '青绿', '稍蜷', '浊响', '稍糊', '凹陷', '硬滑', '否'],
           [14, '浅白', '稍蜷', '沉闷', '稍糊', '凹陷', '硬滑', '否'],
           [15, '乌黑', '稍蜷', '浊响', '清晰', '稍凹', '软粘', '否'],
           [16, '浅白', '蜷缩', '浊响', '模糊', '平坦', '硬滑', '否'],
           [17, '青绿', '蜷缩', '沉闷', '稍糊', '稍凹', '硬滑', '否'],]
    #分类属性
    labels = ['编号', '色泽', '根蒂', '敲声', '纹理', '脐纹', '触感', '好瓜']

    return dataSet,labels

def calEnt(dataSet):
    #数据集的函数
    num_entries = len(dataSet)
    #保存每个标签（label）出现次数的字典
    label_counts = {}
    #对每组特征向量进行统计
    for feat_vec in dataSet:
        current_label = feat_vec[-1]
        if current_label not in label_counts.keys():
            label_counts[current_label] = 0
        label_counts[current_label] += 1
    
    ent_value = 0.0     #信息熵

    #计算信息熵
    for key in label_counts:
        prob = float(label_counts[key])/num_entries
        ent_value -= prob*log(prob,2)
    return ent_value



